AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: "Template for a SAM test"

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 120
    MemorySize: 256
    CodeUri: src/
    Runtime: nodejs18.x
    Architectures:
      - x86_64

Resources:
  SamTestGraphQlApi:
    Type: AWS::Serverless::GraphQLApi
    Metadata:
      cfn-lint:
        config:
          ignore_checks:
            - W3002
    Properties:
      AuthenticationType: API_KEY
      ApiKeys:
        MyApiKey:
          Description: API Key for SAM Test API
          ExpiresOn: 1735700399
      Name: SamTestGraphQlApi
      ApiType: GRAPHQL
      Auth:
        Type: API_KEY
      SchemaUri: ./src/graphql/schema.graphql
      DataSources:
        Lambda:
          FetchCompanyDataSource:
            FunctionArn: !GetAtt FetchCompanyFunction.Arn
          FetchCompaniesDataSource:
            FunctionArn: !GetAtt FetchCompaniesFunction.Arn
      Functions:
        fetchCompany:
          Runtime:
            Name: APPSYNC_JS
            Version: 1.0.0
          DataSource: FetchCompanyDataSource
          CodeUri: ./src/graphql/resolvers/company/fetch-company.resolver.js
        fetchCompanies:
          Runtime:
            Name: APPSYNC_JS
            Version: 1.0.0
          DataSource: FetchCompaniesDataSource
          CodeUri: ./src/graphql/resolvers/company/fetch-companies.resolver.js
      Resolvers:
        Query:
          fetchCompany:
            Runtime:
              Name: APPSYNC_JS
              Version: 1.0.0
            Pipeline:
              - fetchCompany
          fetchCompanies:
            Runtime:
              Name: APPSYNC_JS
              Version: 1.0.0
            Pipeline:
              - fetchCompanies

  FetchCompanyFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: fetch-company.handler
      Policies:
        - AWSLambdaExecute
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: es2020
        EntryPoints:
          - lambdas/gql/fetch-company.ts
  FetchCompaniesFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: fetch-companies.handler
      Policies:
        - AWSLambdaExecute
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: es2020
        EntryPoints:
          - lambdas/gql/fetch-companies.ts

  CreateCompanyFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: create-company.handler
      Policies:
        - AWSLambdaExecute
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: es2020
        EntryPoints:
          - lambdas/gql/create-company.ts

  CreateCompanyDataSource:
    Type: AWS::AppSync::DataSource
    Properties:
      ApiId: !GetAtt SamTestGraphQlApi.ApiId
      Name: CREATE_COMPANY
      Type: AWS_LAMBDA
      LambdaConfig:
        LambdaFunctionArn: !GetAtt CreateCompanyFunction.Arn
      ServiceRoleArn: !GetAtt AppSyncApiServiceRole.Arn

  CreateCompanyResolver:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId: !GetAtt SamTestGraphQlApi.ApiId
      FieldName: createCompany
      TypeName: Mutation
      DataSourceName: !GetAtt CreateCompanyDataSource.Name

  CreateUserFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: create-user.handler
      Policies:
        - AWSLambdaExecute
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: es2020
        EntryPoints:
          - lambdas/gql/create-user.ts

  CreateUserDataSource:
    Type: AWS::AppSync::DataSource
    Properties:
      ApiId: !GetAtt SamTestGraphQlApi.ApiId
      Name: CREATE_USER
      Type: AWS_LAMBDA
      LambdaConfig:
        LambdaFunctionArn: !GetAtt CreateUserFunction.Arn
      ServiceRoleArn: !GetAtt AppSyncApiServiceRole.Arn

  CreateUserResolver:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId: !GetAtt SamTestGraphQlApi.ApiId
      FieldName: createUser
      TypeName: Mutation
      DataSourceName: !GetAtt CreateUserDataSource.Name

  AppSyncApiServiceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: appsync.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: InvokeLambdaFunctions
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action: lambda:InvokeFunction
                Resource:
                  - "arn:aws:lambda:us-east-1:637423190364:function:sam-test-CreateCompanyFunction-6ZMOwyvSndpO"
                  - "arn:aws:lambda:us-east-1:637423190364:function:sam-test-CreateUserFunction-9LRJnjT8mKf4"

Outputs:
  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
  SamTestGraphQlApiUrl:
    Description: "URL of the AppSync API"
    Value: !GetAtt SamTestGraphQlApi.GraphQLUrl
