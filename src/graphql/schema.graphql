scalar AWSDate

scalar AWSTime

scalar AWSDateTime

scalar AWSTimestamp

type Mutation {
  createCompany(input: CreateCompanyInput!): Company
}

type Query {
  fetchCompany(input: FetchCompanyInput): FetchCompany
  fetchCompanies(input: FetchCompaniesInput): FetchCompanies
}

input CreateCompanyInput {
  document: String!
  email: String
}

input FetchCompanyInput {
  companyId: String!
}

type FetchCompany {
  document: String!
  status: String!
  email: String
  createdAt: AWSDate
  updatedAt: AWSDate
  approvalStatusUpdatedAt: AWSDate
}

input FetchCompaniesInput {
  status: String
  startDate: AWSDate
  endDate: AWSDate
  limit: Int
  paginationToken: String
}

type FetchCompanies {
  paginationToken: String
  data: [Company]
}

type Company {
  companyId: ID!
  document: String!
  status: String!
  email: String
  createdAt: AWSDate
  updatedAt: AWSDate
  approvalStatusUpdatedAt: AWSDate
}

schema {
  query: Query
  mutation: Mutation
}
